{"version":3,"sources":["App.js","redux/actions/movieList.actions.js","components/Modal.js","services/movieApi.service.js","components/SearchBar.js","components/MovieDetails.js","components/MovieSearch.js","redux/middleware/logger.js","redux/enhancers/monitorReducerEnhancer.js","redux/reducers/movieList.reducer.js","redux/reducers/index.js","components/Navbar.js","index.js","redux/store.js"],"names":["StyledContainer","Styled","Container","App","movieList","getMovieList","removeMovieFromList","useEffect","className","Row","list","map","movie","Col","xs","md","lg","Card","bg","border","text","Img","variant","src","Poster","alt","Title","Body","Button","onClick","imdbID","connect","state","movieListReducer","payload","type","Modal","show","children","handleClose","onHide","Header","Footer","apiKey","MovieApiService","title","page","axios","get","then","res","data","catch","err","console","error","id","SearchBar","onSearch","setTitle","Form","inline","onSubmit","e","preventDefault","sm","Control","name","placeholder","onChange","target","value","required","MovieDetails","useState","setMovie","movieService","getMovieById","a","imdbRating","Rated","Runtime","Genre","Plot","Actors","MovieSearch","addMovieToList","movieApiService","selectedMovie","setSelectedMovie","searchResults","setSearchResults","getMoviesByTitle","results","Search","addToMovieList","result","logger","store","next","action","group","info","log","getState","groupEnd","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","number","start","performance","now","newState","end","diff","Math","round","localStorage","getItem","JSON","parse","push","setItem","stringify","updatedList","filter","movieFromList","length","removeItem","rootReducer","combineReducers","Navbar","Brand","as","Link","to","Toggle","Collapse","Nav","ReactDOM","render","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","composeWithDevTools","configureStore","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.b02ce0e5.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getMovieList, removeMovieFromList } from './redux/actions/movieList.actions';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Styled from 'styled-components';\r\n\r\nconst StyledContainer = Styled(Container)` \r\n  min-height: 100vh;\r\n  min-width: 100vw;\r\n  `;\r\n\r\nlet App = ({ movieList, getMovieList, removeMovieFromList  }) => {\r\n  useEffect(() => {\r\n    getMovieList();\r\n  }, [getMovieList])\r\n\r\n  return (\r\n    <StyledContainer className=\"bg-dark\">\r\n      <h1>My Movie List</h1>\r\n        <Row>\r\n        {\r\n          movieList && movieList.list && movieList.list.map((movie) => (\r\n            <Col xs={12} md={6} lg={3} key={movie.imdbID}>\r\n              <Card bg=\"dark\" border=\"light\" text=\"light\">\r\n                <Card.Img variant=\"top\" src={movie.Poster} alt={`${movie.Title} poster`} />\r\n                <Card.Body>\r\n                  <Card.Title>{ movie.Title }</Card.Title>\r\n                  <Button variant=\"primary\" onClick={() => removeMovieFromList(movie)}>Remove From List</Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        }\r\n        </Row>\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movieList: state.movieListReducer,\r\n});\r\n\r\nApp = connect(\r\n  mapStateToProps,\r\n  { getMovieList, removeMovieFromList }\r\n)(App)\r\n\r\nexport default App;\r\n","export const getMovieList = (payload = 'list') => ({ type: 'GET_MOVIE_LIST', payload : payload });\r\nexport const addMovieToList = (payload) => ({ type: 'ADD_MOVIE_TO_LIST', payload : payload });\r\nexport const removeMovieFromList = (payload) => ({ type: 'REMOVE_MOVIE_FROM_LIST', payload });","import RBModal from 'react-bootstrap/Modal';\r\nimport RBButton from 'react-bootstrap/Button';\r\n\r\nexport const Modal = ({show, children, handleClose}) => {\r\n    return (\r\n        <>\r\n            <RBModal show={show} onHide={handleClose}>\r\n                <RBModal.Header>\r\n                <RBModal.Title>Movie Details</RBModal.Title>\r\n                </RBModal.Header>\r\n                <RBModal.Body> {children} </RBModal.Body>\r\n                <RBModal.Footer>\r\n                <RBButton variant=\"danger\" onClick={handleClose}>\r\n                    Close\r\n                </RBButton>\r\n                </RBModal.Footer>\r\n            </RBModal>\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nconst apiKey = 'b1114fdf';\r\n\r\nexport default class MovieApiService {\r\n    getMoviesByTitle(title, page = 1) {\r\n        return axios.get(`https://www.omdbapi.com/?s=${title}&page=${page}&apikey=${apiKey}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => console.error(err));\r\n    }\r\n\r\n    getMovieById(id) {\r\n        return axios.get(`https://www.omdbapi.com/?i=${id}&apikey=${apiKey}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => console.error(err));\r\n    }\r\n}","import Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nconst SearchBar = ({ onSearch, setTitle }) => {\r\n    const onFormSubmit = (e) => {\r\n        onSearch();\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Form inline onSubmit={onFormSubmit}>\r\n                <Row>\r\n                    <Col sm={9}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            id=\"movieTitle\"\r\n                            name=\"movieTitle\"\r\n                            placeholder=\"Search for a movie or show!\"\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col sm={3}>\r\n                        <Button type=\"submit\" className=\"SearchBarButton\">Search</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import { useState, useEffect } from \"react\";\nimport MovieApiService from \"../services/movieApi.service\";\nimport '../styles/modalStyles.css'\n\nexport const MovieDetails = ({ id }) => {\n    const [movie, setMovie] = useState();\n\n    const movieService = new MovieApiService();\n\n    useEffect(() => {\n        getMovieById(id);\n    })\n\n    const getMovieById = async (id) => {\n        const movie = await movieService.getMovieById(id);\n\n        setMovie(movie);\n    }\n\n    return movie\n        ? (\n        <div>\n            <img src={movie.Poster} alt={`${movie.Title} poster`}/>\n            <div>\n                <div>\n                    <h2>{movie.Title}</h2>\n                    <span className=\"Rating\">\n                        { movie.imdbRating }\n                    </span>\n                </div>\n                <div>\n                    <span className=\"Rated\">\n                        { movie.Rated }\n                    </span>\n                    <span className=\"Runtime\">\n                        { movie.Runtime }\n                    </span>\n                    <span className=\"Genre\">\n                        { movie.Genre }\n                    </span>\n                </div>\n                <div>\n                    <h4 className=\"PlotHeader\">Plot</h4>\n                    <span className=\"Plot\"> { movie.Plot } </span>\n                </div>\n                <div>\n                    <h4 className=\"ActorsHeader\">Actors</h4>\n                    <span className=\"Actors\"> { movie.Actors } </span>\n                </div>\n            </div>\n        </div>\n        )\n        : (\n            <h2>Loading...</h2>\n        );\n}","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addMovieToList } from '../redux/actions/movieList.actions';\r\nimport { Modal } from './Modal';\r\nimport MovieApiService from '../services/movieApi.service';\r\nimport SearchBar from './SearchBar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Styled from 'styled-components';\r\nimport { MovieDetails } from './MovieDetails';\r\n\r\nconst StyledContainer = Styled(Container)` \r\n  min-height: 100vh;\r\n  min-width: 100vw;\r\n  `;\r\n\r\nlet MovieSearch = ({ addMovieToList }) => {\r\n    const movieApiService = new MovieApiService();\r\n    const [title, setTitle] = useState();\r\n    const [selectedMovie, setSelectedMovie] = useState();\r\n    const [searchResults, setSearchResults] = useState(); \r\n\r\n    const onSearch = async () => {\r\n        const results = await movieApiService.getMoviesByTitle(title);\r\n        setSearchResults(results.Search);\r\n    }\r\n\r\n    const addToMovieList = async (id) => {\r\n        const result = await movieApiService.getMovieById(id);\r\n\r\n        addMovieToList(result);\r\n    }\r\n\r\n    const handleClose = () => setSelectedMovie(null);\r\n    \r\n    return (\r\n        <StyledContainer className=\"bg-dark\">\r\n            <SearchBar onSearch={onSearch} setTitle={setTitle}/>\r\n            <Row>\r\n                {\r\n                    searchResults && searchResults.map((movie) => (\r\n                        <Col xs={12} md={6} lg={3} key={movie.imdbID}>\r\n                            <Card bg=\"dark\" border=\"light\" text=\"light\">\r\n                                <Card.Img variant=\"top\" src={movie.Poster} alt={`${movie.Title} poster`} />\r\n                                <Card.Body>\r\n                                    <Card.Title>{ movie.Title }</Card.Title>\r\n                                    <Button variant=\"info\" onClick={() => setSelectedMovie(movie.imdbID)}>Movie Details</Button>\r\n                                    <Button variant=\"primary\" onClick={() => addToMovieList(movie.imdbID)}>Add To List</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                            { selectedMovie && selectedMovie === movie.imdbID && \r\n                            <Modal\r\n                                show={!!selectedMovie}\r\n                                children={\r\n                                    <MovieDetails id={movie.imdbID}/>\r\n                                }\r\n                                handleClose={handleClose}\r\n                            >\r\n                            </Modal>\r\n                            }\r\n                        </Col>\r\n                    ))\r\n                }\r\n            </Row>\r\n        </StyledContainer>\r\n    )\r\n}\r\n\r\nMovieSearch = connect(\r\n    null,\r\n    { addMovieToList }\r\n)(MovieSearch)\r\n\r\nexport default MovieSearch;","const logger = store => next => action => {\r\n    console.group(action.type)\r\n    console.info('dispatching', action)\r\n    let result = next(action)\r\n    console.log('next state', store.getState())\r\n    console.groupEnd()\r\n    return result\r\n}\r\n  \r\nexport default logger","const round = number => Math.round(number * 100) / 100;\r\n\r\nconst monitorReducerEnhancer =\r\n  createStore => (reducer, initialState, enhancer) => {\r\n    const monitoredReducer = (state, action) => {\r\n      const start = performance.now()\r\n      const newState = reducer(state, action)\r\n      const end = performance.now()\r\n      const diff = round(end - start)\r\n\r\n      console.log('reducer process time:', diff)\r\n\r\n      return newState\r\n    }\r\n\r\n    return createStore(monitoredReducer, initialState, enhancer)\r\n  }\r\n\r\nexport default monitorReducerEnhancer","const initialState = null;\r\n\r\nconst movieListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'GET_MOVIE_LIST': {\r\n            const movieList = localStorage.getItem('movieList');\r\n            console.log(action.payload);\r\n\r\n            return movieList\r\n                ? JSON.parse(movieList)\r\n                : state;\r\n        }\r\n        case 'ADD_MOVIE_TO_LIST': {\r\n            let movieList = localStorage.getItem('movieList');\r\n            if (movieList) {\r\n                movieList = JSON.parse(movieList);\r\n                movieList.list.push(action.payload);\r\n            } else {\r\n                movieList = { list: [ action.payload ] }\r\n            }\r\n\r\n            localStorage.setItem('movieList', JSON.stringify(movieList));\r\n\r\n            return movieList;\r\n\r\n        }\r\n        case 'REMOVE_MOVIE_FROM_LIST': {\r\n            let movieList = localStorage.getItem('movieList');\r\n            movieList = JSON.parse(movieList);\r\n            const updatedList = movieList.list.filter((movieFromList) => movieFromList.imdbID !== action.payload.imdbID);\r\n            if (updatedList.length) {\r\n              movieList.list = updatedList;\r\n              localStorage.setItem('movieList', JSON.stringify(movieList));\r\n            } else {\r\n              movieList = null;\r\n              localStorage.removeItem('movieList');\r\n            }\r\n  \r\n            return movieList;\r\n          }  \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default movieListReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport movieListReducer from \"./movieList.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    movieListReducer\r\n});\r\n\r\nexport default rootReducer;","import RBNavbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <RBNavbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <RBNavbar.Brand as={Link} to=\"/\">Movie Database</RBNavbar.Brand>\r\n                <RBNavbar.Toggle/>\r\n                <RBNavbar.Collapse/>\r\n                    <Nav>\r\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/usermovielist\">Movie List</Nav.Link>\r\n                    </Nav>\r\n            </Container>\r\n        </RBNavbar>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import { Provider } from 'react-redux';\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport MovieSearch from './components/MovieSearch';\r\nimport configureStore from './redux/store';\r\nimport Navbar from './components/Navbar';\r\nimport React from 'react';\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <Router>\r\n      <Navbar/> \r\n      <Switch>\r\n        <Route exact path=\"/\" component={MovieSearch} />\r\n        <Route path=\"/usermovielist\" component={App} />\r\n        <Route path='**' render={() => <Redirect to='/'/> }/>\r\n      </Switch>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","import { applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport loggerMiddleware from './middleware/logger';\r\nimport monitorReducerEnhancer from './enhancers/monitorReducerEnhancer';\r\nimport { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport default function configureStore(preloadedState) {\r\n    const middlewares = [loggerMiddleware, thunkMiddleware];\r\n    const enhancers = [applyMiddleware(...middlewares), monitorReducerEnhancer];\r\n\r\n    return createStore(rootReducer, preloadedState, composeWithDevTools(...enhancers))\r\n}"],"sourceRoot":""}