{"version":3,"sources":["App.js","redux/actions/movieList.actions.js","services/movieApi.service.js","components/SearchBar.js","components/MovieSearch.js","redux/middleware/logger.js","redux/enhancers/monitorReducerEnhancer.js","redux/reducers/movieList.reducer.js","redux/reducers/index.js","components/Navbar.js","index.js","redux/store.js"],"names":["App","movieList","getMovieList","removeMovieFromList","useEffect","Container","Row","list","map","movie","Col","xs","md","lg","Card","Img","variant","src","Poster","alt","Title","Body","Button","onClick","imdbID","connect","state","movieListReducer","type","payload","apiKey","MovieApiService","title","page","axios","get","then","res","data","catch","err","console","error","id","SearchBar","onSearch","useState","setTitle","onSubmit","e","preventDefault","className","htmlFor","onChange","target","value","MovieSearch","addMovieToList","movieApiService","searchResults","setSearchResults","a","getMoviesByTitle","results","Search","addToMovieList","getMovieById","result","logger","store","next","action","group","info","log","getState","groupEnd","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","number","start","performance","now","newState","end","diff","Math","round","localStorage","getItem","JSON","parse","push","setItem","stringify","updatedList","filter","movieFromList","length","removeItem","rootReducer","combineReducers","Navbar","bg","Brand","href","Toggle","Collapse","Nav","Link","ReactDOM","render","StrictMode","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","composeWithDevTools","configureStore","exact","path","component","to","document","getElementById"],"mappings":"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","file":"static/js/main.0adf5031.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getMovieList, removeMovieFromList } from './redux/actions/movieList.actions';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet App = ({ movieList, getMovieList, removeMovieFromList  }) => {\r\n  useEffect(() => {\r\n    getMovieList();\r\n  }, [getMovieList])\r\n\r\n  return (\r\n    <Container>\r\n      <h1>My Movie List</h1>\r\n        <Row>\r\n        {\r\n          movieList && movieList.list && movieList.list.map((movie) => (\r\n            <Col xs={12} md={6} lg={3} key={movie.imdbID}>\r\n              <Card>\r\n                <Card.Img variant=\"top\" src={movie.Poster} alt={`${movie.Title} poster`} />\r\n                <Card.Body>\r\n                  <Card.Title>{ movie.Title }</Card.Title>\r\n                  <Button variant=\"primary\" onClick={() => removeMovieFromList(movie)}>Remove From List</Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        }\r\n        </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movieList: state.movieListReducer,\r\n});\r\n\r\nApp = connect(\r\n  mapStateToProps,\r\n  { getMovieList, removeMovieFromList }\r\n)(App)\r\n\r\nexport default App;\r\n","export const getMovieList = () => ({ type: 'GET_MOVIE_LIST' });\r\nexport const addMovieToList = (payload) => ({ type: 'ADD_MOVIE_TO_LIST', payload });\r\nexport const removeMovieFromList = (payload) => ({ type: 'REMOVE_MOVIE_FROM_LIST', payload });","import axios from 'axios';\r\nconst apiKey = 'b1114fdf';\r\n\r\nexport default class MovieApiService {\r\n    getMoviesByTitle(title, page = 1) {\r\n        return axios.get(`https://www.omdbapi.com/?s=${title}&page=${page}&apikey=${apiKey}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => console.error(err));\r\n    }\r\n\r\n    getMovieById(id) {\r\n        return axios.get(`https://www.omdbapi.com/?i=${id}&apikey=${apiKey}`)\r\n            .then((res) => res.data)\r\n            .catch((err) => console.error(err));\r\n    }\r\n}","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst SearchBar = ({ onSearch }) => {\r\n    const [title, setTitle] = useState();\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        onSearch(title);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onFormSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={(e) => setTitle(e.target.value)}    \r\n                />\r\n                <Button type=\"submit\">Search</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addMovieToList } from '../redux/actions/movieList.actions';\r\nimport MovieApiService from '../services/movieApi.service';\r\nimport SearchBar from './SearchBar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet MovieSearch = ({ addMovieToList }) => {\r\n    const movieApiService = new MovieApiService();\r\n\r\n    const [searchResults, setSearchResults] = useState(); \r\n    const onSearch = async (title) => {\r\n        const results = await movieApiService.getMoviesByTitle(title);\r\n\r\n        setSearchResults(results.Search);\r\n    }\r\n\r\n    const addToMovieList = async (id) => {\r\n        const result = await movieApiService.getMovieById(id);\r\n\r\n        addMovieToList(result);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SearchBar onSearch={onSearch}/>\r\n            <Row>\r\n                {\r\n                    searchResults && searchResults.map((movie) => (\r\n                        <Col xs={12} md={6} lg={3} key={movie.imdbID}>\r\n                            <Card>\r\n                                <Card.Img variant=\"top\" src={movie.Poster} alt={`${movie.Title} poster`} />\r\n                                <Card.Body>\r\n                                    <Card.Title>{ movie.Title }</Card.Title>\r\n                                    <Button variant=\"primary\" onClick={() => addToMovieList(movie.imdbID)}>Add To List</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    ))\r\n                }\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nMovieSearch = connect(\r\n    null,\r\n    { addMovieToList }\r\n)(MovieSearch)\r\n\r\nexport default MovieSearch;","const logger = store => next => action => {\r\n    console.group(action.type)\r\n    console.info('dispatching', action)\r\n    let result = next(action)\r\n    console.log('next state', store.getState())\r\n    console.groupEnd()\r\n    return result\r\n}\r\n  \r\nexport default logger","const round = number => Math.round(number * 100) / 100;\r\n\r\nconst monitorReducerEnhancer =\r\n  createStore => (reducer, initialState, enhancer) => {\r\n    const monitoredReducer = (state, action) => {\r\n      const start = performance.now()\r\n      const newState = reducer(state, action)\r\n      const end = performance.now()\r\n      const diff = round(end - start)\r\n\r\n      console.log('reducer process time:', diff)\r\n\r\n      return newState\r\n    }\r\n\r\n    return createStore(monitoredReducer, initialState, enhancer)\r\n  }\r\n\r\nexport default monitorReducerEnhancer","const initialState = null;\r\n\r\nconst movieListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'GET_MOVIE_LIST': {\r\n            const movieList = localStorage.getItem('movieList');\r\n\r\n            return movieList\r\n                ? JSON.parse(movieList)\r\n                : state;\r\n        }\r\n        case 'ADD_MOVIE_TO_LIST': {\r\n            let movieList = localStorage.getItem('movieList');\r\n            if (movieList) {\r\n                movieList = JSON.parse(movieList);\r\n                movieList.list.push(action.payload);\r\n            } else {\r\n                movieList = { list: [ action.payload ] }\r\n            }\r\n\r\n            localStorage.setItem('movieList', JSON.stringify(movieList));\r\n\r\n            return movieList;\r\n\r\n        }\r\n        case 'REMOVE_MOVIE_FROM_LIST': {\r\n            let movieList = localStorage.getItem('movieList');\r\n            movieList = JSON.parse(movieList);\r\n            const updatedList = movieList.list.filter((movieFromList) => movieFromList.imdbID !== action.payload.imdbID);\r\n            if(updatedList.length) {\r\n              movieList.list = updatedList;\r\n              localStorage.setItem('movieList', JSON.stringify(movieList));\r\n            } else {\r\n              localStorage.removeItem('movieList');\r\n            }\r\n  \r\n            return movieList;\r\n          }  \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default movieListReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport movieListReducer from \"./movieList.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    movieListReducer\r\n});\r\n\r\nexport default rootReducer;","import RBNavbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <RBNavbar bg=\"light\">\r\n            <Container>\r\n                <RBNavbar.Brand href=\"/\">Movie Database</RBNavbar.Brand>\r\n                <RBNavbar.Toggle/>\r\n                <RBNavbar.Collapse/>\r\n                    <Nav>\r\n                        <Nav.Link href=\"/redux-movie-list\">Home</Nav.Link>\r\n                        <Nav.Link href=\"/redux-movie-list/usermovielist\">Movie List</Nav.Link>\r\n                    </Nav>\r\n            </Container>\r\n        </RBNavbar>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport MovieSearch from './components/MovieSearch';\r\n\r\nimport configureStore from './redux/store';\r\nimport Navbar from './components/Navbar';\r\nimport React from 'react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={configureStore()}>\r\n      <Router>\r\n        <Navbar/> \r\n        <Switch>\r\n          <Route exact path=\"/redux-movie-list\" component={MovieSearch} />\r\n          <Route exact path=\"/redux-movie-list/usermovielist\" component={App} />\r\n          <Route path='**' render={() => <Redirect to='/redux-movie-list'/> }/>\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","import { applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport loggerMiddleware from './middleware/logger';\r\nimport monitorReducerEnhancer from './enhancers/monitorReducerEnhancer';\r\nimport { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport default function configureStore(preloadedState) {\r\n    const middlewares = [loggerMiddleware, thunkMiddleware];\r\n    const enhancers = [applyMiddleware(...middlewares), monitorReducerEnhancer];\r\n\r\n    return createStore(rootReducer, preloadedState, composeWithDevTools(...enhancers))\r\n}"],"sourceRoot":""}